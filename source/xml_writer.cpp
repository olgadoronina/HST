#include "xml_writer.h"

//======================================================================================================================
void XmlWriter::OpenFile(const char *filename) { // Open the XML file, write xml header and init tags
//======================================================================================================================
    outfile = fopen(filename, "w+");
    printf("XmlWriter::OpenFile File created successfully.\n");
    fprintf(outfile, "<?xml version='1.0'?>\n");// encoding='us-ascii'>\n");
    indent = -1; 
    openTags = 0;
}
//======================================================================================================================
void XmlWriter::AddTag(const std::string elementTag) {
//======================================================================================================================
    openTags += 1;
    indent += 1;
    tempOpenTag.resize(openTags); 
    tempOpenTag[openTags-1] = elementTag; 
}
//======================================================================================================================
void XmlWriter::RemoveTag() {
    openTags -= 1;
    indent -= 1;
    tempOpenTag.resize(openTags); 
}
//======================================================================================================================
void XmlWriter::OpenElement(const std::string elementTag) { 
// Creates a new tag and saves the tag name in a vector to keep track of it
//======================================================================================================================
    AddTag(elementTag);
    for (int i = 0; i < indent; i++) fprintf(outfile,"\t");
    Write("<" + elementTag + ">\n");
}
//======================================================================================================================

//======================================================================================================================
void XmlWriter::CloseElement() { // Closes the currently open tag
//======================================================================================================================
    for (int i = 0; i < indent; i++) fprintf(outfile,"\t"); 
    Write("</" + tempOpenTag[openTags-1] + ">\n");
    RemoveTag();
}
//======================================================================================================================

//======================================================================================================================
void XmlWriter::StartOpenTag(const std::string elementTag) { 
// Creates a new element tag and saves the name to a vector
//======================================================================================================================
    AddTag(elementTag);
    for (int i = 0; i < indent; i++) fprintf(outfile,"\t");
    Write("<" + elementTag);   
}

//======================================================================================================================
void XmlWriter::CloseEmptyElement() { // Closed the currently opened element tag
//======================================================================================================================
    fprintf(outfile,"/>\n");
    RemoveTag();
}
//======================================================================================================================


//======================================================================================================================
void XmlWriter::WriteData(const std::string outString) {
//======================================================================================================================
    for (int i = 0; i < indent; i++) fprintf(outfile,"\t");
    Write(outString);
}
//======================================================================================================================
//======================================================================================================================
void XmlWriter::FinishFile() {
//======================================================================================================================
    int n = openTags;
    for (int i=0;i<n;i++)
        CloseElement(); 
}
//======================================================================================================================